#!/bin/sh
POSIXLY_CORRECT=yes


DATE_REGEX="" #TODO

T_FILTER=""
DATE_FILTER_A=""
DATE_FILTER_B="4000-12-30 23:59:59"
FILES=""
LIST_TICK=0
command=0
PROFIT=0
POS=0
LAST_PRICE=0
HIST_ORD=0
while [ $# -gt 0 ]; do
  case "$1" in
    "-h") echo "help used";;
    "--help") echo "help used";;

    "list-tick") command+=1
    LIST_TICK=1;;

    "profit") command+=1
    echo "profit"
    PROFIT=1;;

    "pos") command+=1
    echo "pos"
    POS=1;;

    "last-price") command+=1;
    echo "last-price"
    LAST_PRICE=1;;

    "hist-ord") command+=1;
    echo "hist-ord"
    HIST_ORD=1;;

    "graph-pos") command+=1;
    echo "graph-pos"
    GRAPH_POS=1;;


    "-a") DATE_FILTER_A="$2"
    echo $DATE_FILTER_A
    shift;;
    "-b") DATE_FILTER_B="$2"
    echo $DATE_FILTER_B
    shift;;
    "-t") T_FILTER+="$2 "
    shift;;
    "-w") echo "$2"
    shift;;

    *.log) FILES+="$1 "
    ;;
    *.gz) gzip -dk "$1"
    FILES+="${1%%.*}.log ";;



  esac
  if [ $command -gt 1 ]
  then
  echo "error"
  exit
  fi
  shift
done


function list_tick {
  if [ "$T_FILTER" = "" ]
  then
  cat ${FILES} |
  awk -v date_after="$DATE_FILTER_A" -v date_before="$DATE_FILTER_B" -F ';' '
  {if($1 > date_after && $1 < date_before)print $2;}' | sort -u
  else
  cat ${FILES} |
  awk -v string="$T_FILTER" -v date_after="$DATE_FILTER_A" -v date_before="$DATE_FILTER_B" -F ';' '
  {if($1 > date_after && $1 < date_before && match(string, $2)) {print $2}}' | sort -u
  fi
exit 0
}

function profit {
  #statements

  if [ "$T_FILTER" = "" ]
  then
  cat ${FILES} |
  awk -v date_after="$DATE_FILTER_A" -v date_before="$DATE_FILTER_B" -F ';' '{
    if($1 > date_after && $1 < date_before){
    if($3 == "buy"){
      sum-=$6*$4
    }
    else{
      sum+=$6*$4
    }
  }
}
  END{printf "%.2f\n", sum}'
else
cat ${FILES} |
awk -v string="$T_FILTER" -v date_after="$DATE_FILTER_A" -v date_before="$DATE_FILTER_B"  -F ';' '{
  if(match(string, $2) && $1 > date_after && $1 < date_before){
  if($3 == "buy"){
    sum-=$6*$4
  }
  else{
    sum+=$6*$4
      }
    }
  }
END{printf "%.2f\n", sum}'
fi
}

if [ $LIST_TICK -eq 1 ]
then
    list_tick
exit 0
fi


if [ $PROFIT -eq 1 ]
then
      profit
exit 0
fi

##EXECUTE POS COMMANDy
if [ $POS -eq 1 ]
then
    if [ "$T_FILTER" = "" ]
    then
    cat ${FILES} |
    awk -v date_after="$DATE_FILTER_A" -v date_before="$DATE_FILTER_B" -F ';' '
    ($1 > date_after && $1 < date_before){
      sum = 0
      if($3 == "buy"){
        sum-=$6*$4
      }
      else{
        sum+=$6*$4
      }
      printf "%s $%.2f\n", $2, sum
    }' | sort -u
    else
    cat ${FILES} |
    awk -v string="$T_FILTER" -v date_after="$DATE_FILTER_A" -v date_before="$DATE_FILTER_B" -F ';' '
    {if($1 > date_after && $1 < date_before && match(string, $2)) {print $2}}' | sort -u
    fi
exit 0
fi




#no command was given
if [ "$T_FILTER" = "" ]
then
cat ${FILES} |
awk -v date_after="$DATE_FILTER_A" -v date_before="$DATE_FILTER_B" -F ';' '
{if($1 > date_after && $1 < date_before) {print}}'

else
cat ${FILES} |
awk -v string="$T_FILTER" -v date_after="$DATE_FILTER_A" -v date_before="$DATE_FILTER_B" -F ';' '
{if($1 > date_after && $1 < date_before && match(string, $2)) {print}}'
exit 0
fi
# awk -F ';' '{print $2, $NF}' ${FILES[@]}
 # else if(match(string, $2)){{sum+=$2;} END{print sum;}}
# done
