#!/bin/sh
POSIXLY_CORRECT=yes


DATE_REGEX="" #TODO

T_FILTER=""
DATE_FILTER_A=""
DATE_FILTER_B="4000-12-30 23:59:59"
FILES=""
LIST_TICK=0
command=0
PROFIT=0
POS=0
LAST_PRICE=0
HIST_ORD=0
GRAPH_POS=0
WIDTH=0
WIDTH_BOOL=0
while [ $# -gt 0 ]; do
  case "$1" in
    "-h") echo "help used";;
    "--help") echo "help used";;

    "list-tick") command+=1
    LIST_TICK=1;;

    "profit") command+=1
    PROFIT=1;;

    "pos") command+=1
    POS=1;;

    "last-price") command+=1;
    LAST_PRICE=1;;

    "hist-ord") command+=1;
    HIST_ORD=1;;

    "graph-pos") command+=1;
    GRAPH_POS=1;;


    "-a") DATE_FILTER_A="$2"
    shift;;
    "-b") DATE_FILTER_B="$2"
    shift;;
    "-t") T_FILTER+="$2 "
    shift;;
    "-w")
    WIDTH_BOOL=1
    WIDTH="$2"
    if [ $WIDTH -le 0 ]
    then
    exit 1
    fi
    shift;;

    *.log) FILES+="$1 "
    ;;
    *.gz) gzip -dk "$1"
    FILES+="${1%%.*}.log "
    ;;
# TODO rm "${1%%.*}.log"


  esac
  if [ $command -gt 1 ]
  then
  echo "error"
  exit
  fi
  shift
done

function filter_tickers {
  if [ "$T_FILTER" = "" ]
  then
  cat ${FILES} | awk -v date_after="$DATE_FILTER_A" -v date_before="$DATE_FILTER_B" -F ';' '
  {if($1 > date_after && $1 < date_before){print $2}}' | sort -u
  else
  cat ${FILES} | awk -v string="$T_FILTER" -v date_after="$DATE_FILTER_A" -v date_before="$DATE_FILTER_B" -F ';' '
    {
      split(string, arr, " ");
      for(i in arr){
        if($2 == arr[i]){
          if($1 > date_after && $1 < date_before){print $2}
        }
      }
    }' | sort -u
  fi
}

function filter {
if [ "$T_FILTER" = "" ]
then
cat ${FILES} | awk -v date_after="$DATE_FILTER_A" -v date_before="$DATE_FILTER_B" -F ';' '
{if($1 > date_after && $1 < date_before){print}}'
else
cat ${FILES} | awk -v string="$T_FILTER" -v date_after="$DATE_FILTER_A" -v date_before="$DATE_FILTER_B" -F ';' '
  {
    split(string, arr, " ");
    for(i in arr){
      if($2 == arr[i]){
        if($1 > date_after && $1 < date_before){print}
      }
    }
  }'
fi
}



function list_tick {
  filter | awk -F ';' '{
    print $2
  }'
}

function profit {

  filter |  awk -F ';' '{
    if($3 == "buy"){
      sum-=$6*$4
    }
    else{
      sum+=$6*$4
    }
  }
  END{printf "%.2f\n", sum}'
}
 function find_longest_pos {
   LONGEST_LEN=0
   TICKERS=$(filter_tickers)
   for ticker in $TICKERS
   do
   HELP=$(filter | awk -v spaces="      " -v ticker="$ticker" -F ';' '{
        split(ticker, arr, " ");
        for(i in arr){
       if($2 == arr[i]){
          if($3 == "buy"){
            sum+=$6
          }
          else{
            sum-=$6
          }
          price=$4;
        }
      }
    }END{printf"%d", length(sum * price)}')
    if [ $HELP -gt $LONGEST_LEN ]
    then
      LONGEST_LEN=$HELP
    fi
    done
    echo $LONGEST_LEN
 }


function pos {
    TICKERS=$(filter_tickers)
    LENGTH=$(find_longest_pos)
    for ticker in $TICKERS
    do
    filter | awk -v l=$LENGTH -v ticker="$ticker" -F ';' '{
         split(ticker, arr, " ");
         for(i in arr){
        if($2 == arr[i]){
           if($3 == "buy"){
             sum+=$6
           }
           else{
             sum-=$6
           }
           price=$4;
         }
       }
     }END{printf"%-10s:% *.2f\n", ticker, l, sum*price}'
     done
}

function last_price {
  LENGTH=$(find_longest_pos)
  TICKERS=$(filter_tickers)
  for ticker in $TICKERS
  do
  filter | awk -F ';' -v spaces="      " -v ticker="$ticker" '{
       split(ticker, arr, " ");
       for(i in arr){
       if($2 == arr[i]){
         price=$4;}
       }
     }END{printf"%-10s: %*.2f\n", ticker, l, price}'
  done
}

function hist_ord {
  TICKERS=$(filter_tickers)
  for ticker in $TICKERS
  do
  filter | awk -F ';' -v l=$LENGTH -v ticker="$ticker" '{
     split(ticker, arr, " ");
     for(i in arr){
     if($2 == arr[i]){
         counter++
       }
     }
     }END{
       printf"%s%s", ticker,spaces
      for(i=0; i < counter; i++){
        printf"#";
      }
      printf"\n"
      }'
  done
}



function graph_pos {

  TICKERS=$(filter_tickers)
  for ticker in $TICKERS
  do
  filter | awk -F ';' -v spaces="      " -v ticker="$ticker"  '{
     split(ticker, arr, " ");
     for(i in arr){
       if($2 == arr[i]){
         if($3 == "buy"){
           sum+=$6
         }
         else{
           sum-=$6
         }
         price=$4;
       }
     }
     result = int((sum*price)/1000)
   }END{
     if(result < 0){
       printf"%s%s", ticker,spaces
       for(i=result; i < 0; i++){
         printf"!"
        }
     }
   else{
     printf"%s%s", ticker,spaces
     for(i=0; i < result; i++){
       printf"#"
      }
   }
   printf"\n"
 }'
  done
}

function find_max_val {
  MAX_VAL=0 #NOT SURE ABOUT THIS Xd
  TICKERS=$1
  for ticker in $TICKERS
  do
  VAR=$(filter | awk -F ';' -v ticker="$ticker" '{
    split(ticker, arr, " ");
    for(i in arr){
      if($2 == arr[i]){
        if($3 == "buy"){
          sum+=$6
        }
        else{
          sum-=$6
        }
        price=$4;
      }
    }
  }END{print int(sum*price)}')
  if [ $VAR -lt 0 ]
  then
  VAR=$(($VAR*-1))
  fi
  if [ $VAR -gt $MAX_VAL ]
  then
  MAX_VAL=$VAR
  fi
  done
  echo $MAX_VAL
}


function graph_pos_w {

  TICKERS=$(filter_tickers)
  MAX_VAL=$(find_max_val "$TICKERS")
  STEP=$(($MAX_VAL/$WIDTH))
  for ticker in $TICKERS
  do
  filter | awk -F ';' -v step=$STEP -v spaces="      " -v ticker="$ticker"  '{
     split(ticker, arr, " ");
     for(i in arr){
       if($2 == arr[i]){
         if($3 == "buy"){
           sum+=$6
         }
         else{
           sum-=$6
         }
         price=$4;
       }
     }
     result = int((sum*price))
   }END{
     if(result < 0){
       printf"%s%s", ticker,spaces
       for(i=result+step; i < 0; i+=step){
         printf"!"
        }
     }
   else{
     printf"%s%s", ticker,spaces
     for(i=step; i < result; i+=step){
       printf"#"
      }
   }
   printf"\n"
 }'
  done
}

if [ $HIST_ORD -eq 1 ]
then
    hist_ord
exit 0
fi

if [ $LIST_TICK -eq 1 ]
then
    list_tick | sort -u
exit 0
fi


if [ $PROFIT -eq 1 ]
then
      profit
exit 0
fi


##EXECUTE POS COMMAND
if [ $POS -eq 1 ]
then
    pos | sort -n -r -k 3

exit 0
fi
if [ $LAST_PRICE -eq 1 ]
then
    last_price

exit 0
fi
if [ $GRAPH_POS -eq 1 ]
then
  if [ $WIDTH_BOOL -eq 1 ]
    then
      graph_pos_w
      exit 0
  else
     graph_pos
     exit 0
fi
fi




#no command was given

filter
exit 0
